<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Week 13: Packaging &amp; Reproducibility on PSU Astro 528</title><link>https://psuastro528.github.io/lessons/week13/</link><description>Recent content in Week 13: Packaging &amp; Reproducibility on PSU Astro 528</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://psuastro528.github.io/lessons/week13/index.xml" rel="self" type="application/rss+xml"/><item><title>Exercises</title><link>https://psuastro528.github.io/lessons/week13/lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week13/lab/</guid><description>Reproducibility: Packages, Environments &amp;amp; Containers Lab 9: Reproducibility: Packages, Environments &amp;amp; Containers (due Nov 29)
TBD</description></item><item><title>Learning goals</title><link>https://psuastro528.github.io/lessons/week13/goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week13/goals/</guid><description>Week 13 Readings / Discussions Identify common challenges for providing reproducible software &amp;amp; workflow Describe how Julia&amp;rsquo;s package manager facilitate reproducible research Describe other common tools &amp;amp; strategies for facilitating reproducible research Lessons along the way Virtual machines Projects &amp;amp; environments Containers &amp;amp; images Docker &amp;amp; Singularity</description></item><item><title>Submit Second Parallel Implementation</title><link>https://psuastro528.github.io/lessons/week13/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week13/project/</guid><description>Grading Rubric for second parallelization method Choice of portion of code to parallelize (1 point) Choice of approach for parallelizing code (1 point) Code performs proposed tasks (2 point) Unit/regression tests comparing serial &amp;amp; parallel versions (1 point) Code passes tests (1 point) General code efficiency (1 point) Implementation/optimization of second type of parallelism (2 points) Significant performance improvement (1 point)</description></item></channel></rss>