<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Week 2: Priorities on PSU Astro 528</title><link>https://psuastro528.github.io/lessons/week2/</link><description>Recent content in Week 2: Priorities on PSU Astro 528</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://psuastro528.github.io/lessons/week2/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning goals</title><link>https://psuastro528.github.io/lessons/week2/goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week2/goals/</guid><description>Week 2 Priorities for Scientific Computing Exercise 1: Benchmarking Benchmark functions accurately Predict cost of an algorithm based on Big-O analysis Identify real world complications that affect scaling Exercise 2: Numerical Stability of N-body Integration Integrate differential equations Compare the accuracy and numerical stability of results as a function of time step, order and integration Appreciate importance of numerical stability Exercise 3: Model for Radial Velocity of a Star Practice documenting your functions effectively Write effective tests for floating point calculations Reduce bugs via composite types and named function parameters Reduce bugs via assertions Identify bugs promptly via unit testing Identify bugs promptly via continuous integration testing End-to-end Testing to validate code Lessons along the way Just-in-Time (JIT) Compilation Types of languages Compiled vs Interpretted vs JIT Static/dynamic type-checking Plotting with Plots.</description></item><item><title>Readings</title><link>https://psuastro528.github.io/lessons/week2/read/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week2/read/</guid><description>Week 2: Prior to Monday&amp;rsquo;s class Writing Scientific Software Ch 3: Priorities (6pg) Writing Scientific Software Ch 4: Famous Disasters (4pg) Best Practices for Scientiﬁc Computing: Sec. 1-4 (6pg) Prior to Thursday&amp;rsquo;s class Best Practices for Scientiﬁc Computing: Sec. 5-9 (5pg) Start Lab 2</description></item><item><title>Exercises</title><link>https://psuastro528.github.io/lessons/week2/lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week2/lab/</guid><description>Assertions, Unit Testing, Countinuous Integrations, Benchmarking (due Sept 5) Exercise 1: Benchmarking, Big-O Analysis, Compute vs Memory Limits Exercise 2: Numerical Stability of N-body Integration Exercise 3: Unit Testing for Floating Point Arithmetic, Defensive Programming, Assertions, Continuous Integration, End-to-end testing, Validation Lessons / Resources Getting Started with Julia on ACI Starting &amp;amp; Submitting Assignments Julia Manual Think Julia: How to Think Like a Computer Scientist Learn Julia in Y Minutes Documentation for DifferentialEquations.</description></item></channel></rss>