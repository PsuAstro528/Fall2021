<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Week 4: Computer Architectures on PSU Astro 528</title><link>https://psuastro528.github.io/lessons/week4/</link><description>Recent content in Week 4: Computer Architectures on PSU Astro 528</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://psuastro528.github.io/lessons/week4/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning goals</title><link>https://psuastro528.github.io/lessons/week4/goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week4/goals/</guid><description>Week 4 Describe steps a CPU performs surrounding actual arithmetic Anticipate when performance will be affected by cache size Exercises Fit a model to data Read &amp;amp; write models using a probabilistic programming language Estimate uncertainties in model parameters using Markov chain Monte Carlo Project Plan data structures to optimize for memory access Consider whether autodifferentiation and/or probablistic program model is appropriate for project Lessons along the way Optimization Algorithms Linear optimization: matrix solve Non-linear optimization: Nelder-Mead, Gradient Descent, BFGS Utility of gradients Autodifferentiation Statistical inference Posterior Sampling Markov chain Monte Carlo Computer hardware Bus Registers FPUs Prefetch Pipelining Out of order execution Cache: levels, lines, latency, associative</description></item><item><title>Readings</title><link>https://psuastro528.github.io/lessons/week4/read/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week4/read/</guid><description>Week 4 Prior to Monday&amp;rsquo;s class Submit Project Proposal Writing Scientific Software Ch 6: Computer Organization (12pg) Either Introduction to High Performance Computing for Scientists and Engineers Ch 1: Modern Processors (32pg) -or- Introduction to High-Performance Computing Ch 1-1.3.4.1: Single-processor Computing (13pg) Prior to Thursday&amp;rsquo;s class Writing Scientific Software Ch 17.3: Profiling (2pg) Why does Julia work so well? Submit Lab 3</description></item><item><title>Exercises</title><link>https://psuastro528.github.io/lessons/week4/lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week4/lab/</guid><description>[Lab 4: Higher-level Languages &amp;amp; Probabilistic Programming(https://github.com/PsuAstro528/lab4-start) (due Sept 23)
Exercise 1: Auto-differentiation &amp;amp; Optimization (as in minimization/maximization of a function) Exercise 2: Probabilistic Programming Language</description></item></channel></rss>