<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Week 3: Software Design on PSU Astro 528</title><link>https://psuastro528.github.io/lessons/week3/</link><description>Recent content in Week 3: Software Design on PSU Astro 528</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://psuastro528.github.io/lessons/week3/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning goals</title><link>https://psuastro528.github.io/lessons/week3/goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week3/goals/</guid><description>Week 3 Exercise 1 Recognize pros/cons of different file formats Exercise 2 Recognize importance of choosing an efficient algorithm Use DataFrames efficiently via join and queries Exercise 3 Recognize significance of memory layout &amp;amp; data structures Class Project Apply &amp;ldquo;Programming in the Large&amp;rdquo; to your class project Choose appropriate file format for a project Choose appropriate memory layout &amp;amp; data structures for a project Lessons along the way Big-O notation File formats: CSV, FITS, HDF5, JLD2, Arrow Calling Python from Julia</description></item><item><title>Readings</title><link>https://psuastro528.github.io/lessons/week3/read/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week3/read/</guid><description>Week 3: Prior to Monday&amp;rsquo;s class Submit Lab 2 Writing Scientific Software Ch 7: Software Design (26pg, ok to skip 7.11-12) Prior to Thursday&amp;rsquo;s class A beginner&amp;rsquo;s guide to Big-O notation Big-O Cheat Sheet</description></item><item><title>Exercises</title><link>https://psuastro528.github.io/lessons/week3/lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://psuastro528.github.io/lessons/week3/lab/</guid><description>Lab 3: Memory Access, Disk I/O, DataFrames (due Sept 12)
Exercise 1: Benchmarking File I/O Exercise 2: DataFrames, Join, Query Exercise 3: Dense Matrix-Vector Multiply Lessons / Resources Details for this class Getting Started with Julia on ACI Starting &amp;amp; Submitting Assignments Julia Julia Manual Think Julia: How to Think Like a Computer Scientist Learn Julia in Y Minutes File Formats FITSIO library written in C HDF5 Apache Arrow Julia packages for reading files Julia&amp;rsquo;s FileIO.</description></item></channel></rss>